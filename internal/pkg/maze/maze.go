package maze

import "fmt"

type Maze struct {
	Walls Layer
	Foods Layer
	Characters Layer
}

func NewMaze ()(Maze, error) {
	var m Maze
	if err := m.Walls.Reset("Walls"); err != nil {
		return Maze{}, err
	}
	m.Foods.Reset("Foods")
	m.Characters.Reset("Characters")
	return m, nil
}

type Layer [31][28]Ceil

func (l *Layer) Reset (model string) error {
	switch model {
	case "Walls":
		*l = Layer(
			[31][28]Ceil{
				{'╔', '═', '═', '═', '═', '═', '═', '═', '═', '═', '═', '═', '═', '╤', '╤', '═', '═', '═', '═', '═', '═', '═', '═', '═', '═', '═', '═', '╗'},
				{'║', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '│', '│', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '║'},
				{'║', ' ', '┌', '─', '─', '┐', ' ', '┌', '─', '─', '─', '┐', ' ', '│', '│', ' ', '┌', '─', '─', '─', '┐', ' ', '┌', '─', '─', '┐', ' ', '║'},
				{'║', ' ', '│', ' ', ' ', '│', ' ', '│', ' ', ' ', ' ', '│', ' ', '│', '│', ' ', '│', ' ', ' ', ' ', '│', ' ', '│', ' ', ' ', '│', ' ', '║'},
				{'║', ' ', '└', '─', '─', '┘', ' ', '└', '─', '─', '─', '┘', ' ', '└', '┘', ' ', '└', '─', '─', '─', '┘', ' ', '└', '─', '─', '┘', ' ', '║'},
				{'║', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '║'},
				{'║', ' ', '┌', '─', '─', '┐', ' ', '┌', '┐', ' ', '┌', '─', '─', '─', '─', '─', '─', '┐', ' ', '┌', '┐', ' ', '┌', '─', '─', '┐', ' ', '║'},
				{'║', ' ', '└', '─', '─', '┘', ' ', '│', '│', ' ', '└', '─', '─', '┐', '┌', '─', '─', '┘', ' ', '│', '│', ' ', '└', '─', '─', '┘', ' ', '║'},
				{'║', ' ', ' ', ' ', ' ', ' ', ' ', '│', '│', ' ', ' ', ' ', ' ', '│', '│', ' ', ' ', ' ', ' ', '│', '│', ' ', ' ', ' ', ' ', ' ', ' ', '║'},
				{'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'},
				{'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'},
				{'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'},
				{'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'},
				{'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'},
				{'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'},
				{'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a'},
			},
		)
	case "Foods":
	case "Characters":
	default:
		return fmt.Errorf("model must be \"Walls\", \"Foods\" or \"Characters\"")
	}
	return nil
}

var s [34]string{"", ""}